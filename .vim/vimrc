set path=.,**
set lazyredraw
set undofile
set smartindent
set updatetime=100
set wildignorecase
set wildignore+=**/node_modules/**,**/dist/**,**/.git/**,**/*.o,**/venv/**,**/vendor/**
" Give files with no extension a lower priority when it comes to matching
" wildcards (To avoid opening executables accidently)
set suffixes+=,,

" Disable auto commenting
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

set ignorecase    " Case in-sensitive search
set smartcase     " Smart case sensitive search
set infercase     " Case in-sensitive insert-completion

" set number
" set relativenumber
set termguicolors
set background=dark
set laststatus=0
set signcolumn=no
set mouse=
set guicursor=a:block
set cursorline

set nowrap             " Disable line wraping
set linebreak          " Wrap whole word
let &showbreak = '↳ '  " Character to show on the next line of a line wrap

set list               " Enable list mode

set clipboard=unnamed      " Set clipboard to primary selection
set updatetime=300

" Map ctrl-c to esc
imap <C-c> <Esc>

" Set proper listchars on every buffer load
function SetListChars()
	let l:listchars = 'tab:\ \ ,trail:·,extends:>,precedes:<,nbsp:⦸'
	if !&expandtab
		let l:listchars = l:listchars . ',lead:·'
	endif
	exec 'setlocal listchars=' . l:listchars
endfunction
autocmd BufEnter * call SetListChars()

" Jump to guide character
nmap <Space><Space> <Esc>/<++><Enter>:noh<CR>"_c4l

" Run make in shell
nnoremap <leader>m :!make<CR>

" Remove trailing whitespaces on pressing F5
" nnoremap <silent> <F5> :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s <CR>

" Triger `autoread` when files changes on disk
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI *
			\ if mode() !~ '\v(c|r.?|!|t)' && getcmdwintype() == '' | checktime | endif
" Notification after file change
autocmd FileChangedShellPost *
			\ echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None

" Get highlight group
function! SynGroup()
	let l:s = synID(line('.'), col('.'), 1)
	echo synIDattr(l:s, 'name') . ' -> ' . synIDattr(synIDtrans(l:s), 'name')
endfun
nnoremap <F6> :call SynGroup()<CR>

" Highligh yanked text
au TextYankPost * silent! lua vim.highlight.on_yank {higroup="IncSearch", timeout=600}

" Open current file with current line number in vscode
command Code call system('code . --goto "' . expand('%') . '":' . line('.'))
